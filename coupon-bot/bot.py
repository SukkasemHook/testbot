import discord
from discord import app_commands
from discord.ext import commands
import os
from dotenv import load_dotenv
import json

load_dotenv()
TOKEN = os.getenv("DISCORD_BOT_TOKEN")

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)

# üîÑ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
current_code = "DEFAULT123"
raw_users = os.getenv("USERS")

if not raw_users:
    raise ValueError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ USERS ‡πÉ‡∏ô environment ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á")

try:
    users = json.loads(raw_users)
except json.JSONDecodeError as e:
    raise ValueError(f"‚ùå JSON decode error: {e}")

@bot.event
async def on_ready():
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ Synced {len(synced)} commands")
    except Exception as e:
        print(f"‚ùå Sync error: {e}")
    print(f"ü§ñ Logged in as {bot.user}")

# ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ code ‡∏Å‡∏•‡∏≤‡∏á
@bot.tree.command(name="setcode", description="‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
@app_commands.describe(code="‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
async def setcode(interaction: discord.Interaction, code: str):
    global current_code
    current_code = code
    await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á code ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô `{code}`")

# üì® ‡πÉ‡∏ä‡πâ code ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
@bot.tree.command(name="coupon", description="‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
@app_commands.describe(email="‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
async def coupon(interaction: discord.Interaction, email: str):
    url = f"https://coupon.devplay.com/coupon/cookieruntoa/en?code={current_code}&email={email}"
    await interaction.response.send_message(f"üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {url}")

# ‚úçÔ∏è ‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏≠‡∏á
@bot.tree.command(name="coupon_manual", description="‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á")
@app_commands.describe(code="‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á", email="‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
async def coupon_manual(interaction: discord.Interaction, code: str, email: str):
    url = f"https://coupon.devplay.com/coupon/cookieruntoa/en?code={code}&email={email}"
    await interaction.response.send_message(f"üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {url}")

class UserDropdown(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label=user["name"], value=user["email"])
            for user in users
        ]
        super().__init__(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ...",
            min_values=1,
            max_values=1,
            options=options
        )

    async def callback(self, interaction: discord.Interaction):
        email = self.values[0]
        user = next((u for u in users if u["email"] == email), None)
        if user:
            url = f"https://coupon.devplay.com/coupon/cookieruntoa/th?code={current_code}&email={email}"
            await interaction.response.send_message(f"üîó **{user['name']}**: {url}", ephemeral=True)

class DropdownView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(UserDropdown())

@bot.tree.command(name="coupon_dropdown", description="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á")
async def coupon_dropdown(interaction: discord.Interaction):
    await interaction.response.send_message("üìã ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠:", view=DropdownView(), ephemeral=True)


bot.run(TOKEN)
